# Runs all the Python SDK tests within the `tests/` directory to check our code

name: CI Tests
permissions: read-all

on:
  # trunk-ignore(yamllint/empty-values)
  workflow_dispatch:

  push:
    branches:
      - main
      - develop
      - trunk-merge/**
  pull_request:
    branches:
      - main
      - develop
      - "*"

concurrency:
  # github.workflow: name of the workflow
  # github.event.pull_request.number || github.ref: pull request number or branch name if not a pull request
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

  # Cancel in-progress runs when a new workflow with the same group name is triggered
  cancel-in-progress: true

jobs:
  install:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.12]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate Cognito token
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          pip install awscli
          OUTPUT=$(aws cognito-idp ${{ secrets.COGNITO_INIT }} --user-pool-id ${{ secrets.COGNITO_USER_POOL_ID }} --client-id ${{ secrets.COGNITO_CLIENT_ID }} --auth-flow ${{ secrets.COGNITO_AUTH_FLOW }} --auth-parameters USERNAME=${{ secrets.COGNITO_USERNAME }},PASSWORD=${{ secrets.COGNITO_PASSWORD }})
          export ACCESS_TOKEN=$(echo "$OUTPUT" | jq -r '.AuthenticationResult.AccessToken' | sed 's/^"\(.*\)"$/\1/')
          export ID_TOKEN=$(echo "$OUTPUT" | jq -r '.AuthenticationResult.IdToken' | sed 's/^"\(.*\)"$/\1/')

      - name: pip install CRIPT Python SDK local package
        run: python${{ matrix.python-version }} -m pip install .

      - name: pip install requirements_dev.txt
        run: python${{ matrix.python-version }} -m pip install -r requirements_dev.txt

      - name: Run pytest on tests/
        run: python${{ matrix.python-version }} -m pytest ./tests/

    env:
      CRIPT_HOST: https://lb-stage.mycriptapp.org/
      CRIPT_TOKEN: ${{ steps.cognito.outputs.ID_TOKEN }}
      CRIPT_STORAGE_TOKEN: ${{ steps.cognito.outputs.ACCESS_TOKEN }}
      CRIPT_TESTS: True
